---

name: Классы
theory: |

  Типизация классов в TypeScript добавляет новый синтаксис определения классов, которого нет в JavaScript. Этот синтаксис существует только на уровне проверки типов. В результирующем коде он вырезается или заменяется.

  Начнем с примера, посмотрите на этот класс:

  ```typescript
  class Point {
    x: number;
    y: number;

    constructor(x: number, y: number) {
      this.x = x;
      this.y = y;
    }
  }

  const p = new Point(10, 20);
  console.log(p); // { x: 10, y: 20 }
  ```

  Здесь мы видим новый синтаксис, описывающий поля класса: `x` и `y`. Их описание обязательно так, как классы — это функции (функции-конструкторы), а функции в TypeScript являются объектами.

  _Определение полей внутри класса появилось в JavaScript начиная со стандарта es2022. Когда они войдут в обиход, мы удалим эту заметку :)_

  Перед тем как двигаться дальше, разберемся с понятием *поле класса*. Обычно в JavaScript все называют свойствами, а слово поле используют как синоним, те кто пришел из других языков. На самом деле это не одно и тоже. Внутри класса мы определяем поля, это как раз данные самого класса. А вот свойство, это то, с помощью чего мы взаимодействуем с объектом. Часто свойства отображаются на поля на прямую, но так происходит не всегда. Например, свойство может быть геттером, который берет информацию из разных полей. Или свойство может быть сеттером, которое устанавливает данные в поле, не соответствующее названию поля.

  ```typescript
  class Point {
    x: number;
    y: number;

    // Возвращаемый тип не указывается, так как это конструктор
    constructor(x: number, y: number) {
      this.x = x;
      this.y = y;
    }

    get inspect(): string {
      return `(${this.x}, ${this.y})`
    }
  }

  const p = new Point(2, 5);
  // Свойство есть, а поля такого нет
  console.log(p.inspect); // (2, 5)
  ```

  Поля могут быть инициализированы сразу при определении класса. Это удобно тогда, когда конструктор не нужен или данные не зависят от его вызова, то есть задаются статически внутри.

  ```typescript
  class Point {
    x = 0;
    y = 0;
  }

  const p = new Point();
  console.log(p); // (0, 0)
  ```

  Как и в случае обычных переменных, тип полей выводится автоматически во время их инициализации, поэтому указывать явный тип не обязательно.

instructions: |

# tips:
#   - |
#     [Перегрузка конструктора](https://www.typescriptlang.org/docs/handbook/2/classes.html#constructors)
