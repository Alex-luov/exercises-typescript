---

name: Присвоение значения
theory: |

  В этом уроке мы разберем присвоение одного значения другому. Это одна из базовых операций с переменными в большинстве языков. Но в статически типизированных языках можно столкнуться с ошибкой `Error: Type X is not assignable to type Y.`. Такой код не удается скомпилировать, поэтому нужно разобраться, как это исправить.
  
  <!-- TODO - автору: А в случае чего можно столкнуться с такой ошибкой? Почему она возникает - нет связи с первым предложением. Какой такой код не удается скомпилировать? -->

  Присвоение одного значения другому и передача аргументом в функцию называют **Assignability**:
  
  <!-- TODO - автору: А как это звучит по русски? -->

  ```typescript
  let x: number;
  const y: number = 10;
  x = y;

  function len(str: string): number {
    return str.length;
  }
  len(false); // Error!
  ```

  При присвоении `x = y;` и передачи аргумента `f(false);` сначала проверяется, может ли переменная содержать передаваемый тип — совместим ли тип `x` с типом `y`.

  Если появляется ошибка `Type X is not assignable to type Y.`, не стоит сразу приводить всё к общему типу `any`. Он опасен тем, что совместим со всеми типами, вроде `never`.
  
  Сначала нужно разобраться, что ожидается на вход, и что возвращает функция. И только после этого можно модифицировать собственные типы: расширять допустимые или использовать хак с `any`.

  Чтобы понимать, что к чему в TypeScript можно присвоить, нужно разбираться в иерархии типов и структурной типизации. Этому посвящены следующие уроки в этом курсе.

instructions: |
  Реализуйте объект по описанному типу `Form`. Поле `name.value` должно проходить валидацию, а поле `age` — нет.

  ```typescript
  console.log(form.name.validator(form.name.value)); // true
  console.log(form.age.validator(form.age.value)); // false
  ```

tips:
  - |
    [Assignability в старой документации](https://github.com/microsoft/TypeScript-New-Handbook/blob/master/reference/Assignability.md)
  - |
    [Таблица assignability в официальной документации](https://www.typescriptlang.org/docs/handbook/type-compatibility.html#any-unknown-object-void-undefined-null-and-never-assignability)

definitions:
  - name: Совместимость типов (Types Compatibility)
    description: |
      совокупность правил, на основе которых при анализе типа данных принимается решение о возможности заменить один тип данных другим таким образом, чтобы замена не нарушила выполнение программы.
